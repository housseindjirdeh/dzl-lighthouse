- hosts: all
  become: yes
  become_user: root
  tasks:
    - name: add dzl group
      group: name=dzl
    - name: allow 'dzl' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%dzl'
        line: '%dzl ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
    - name: add dzl user
      user: name=dzl group=dzl append=yes shell=/bin/bash createhome=yes
    - name: add public key for ssh as dzl
      authorized_key: user=dzl key='{{ item }}'
      with_file:
        - public_keys/patrick
    - name: make /dzl directory
      file: path='/dzl/{{ item }}' state=directory owner=dzl group=dzl mode=0755
      with_items:
        - src
        - conf
        - log
        - scripts
    - name: add node apt key
      apt_key: url=https://deb.nodesource.com/gpgkey/nodesource.gpg.key state=present
    - name: add node apt repo
      apt_repository: repo='deb https://deb.nodesource.com/node_8.x bionic main' state=present filename=nodejs update_cache=yes
    - name: add chrome apt key
      apt_key: url=https://dl-ssl.google.com/linux/linux_signing_key.pub state=present
    - name: add chrome apt repo
      apt_repository: repo='deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' state=present filename=google-chrome update_cache=yes
    - name: install dependencies
      apt:
        pkg: '{{ packages }}'
        state: present
        update_cache: yes
      vars:
        packages:
          - xvfb
          - nodejs
          - google-chrome-stable
    - name: install npm globals
      become_user: root
      npm: name='{{ item }}' global=yes
      with_items: [yarn, surge]
- hosts: all
  become: yes
  become_user: dzl
  tasks:
    - name: check for LH repo
      shell: ls | grep lighthouse
      args:
        chdir: /dzl/src
      ignore_errors: yes
      register: lslh
    - name: setup LH repo
      git: repo=https://github.com/GoogleChrome/lighthouse.git dest=/dzl/src/lighthouse
      when: lslh.failed
    - name: setup DZL repo
      git: repo=https://github.com/patrickhulce/dzl-lighthouse.git dest=/dzl/src/dzl
    - name: copy scripts over
      copy: src=files/scripts/ dest=/dzl/scripts mode=0755
    - name: copy templates over
      template: src='templates/{{ item }}' dest='/dzl/{{ item }}'
      with_items:
        - conf/agent-official.config.js
        - conf/agent-branch.config.js
    - name: setup cron job for lighthouse static server
      cron: name='lh static server' user=dzl job='/usr/bin/flock -n /dzl/log/.lockfile-static-server node /dzl/src/lighthouse/lighthouse-cli/test/fixtures/static-server.js'
- hosts: masters
  become: yes
  become_user: dzl
  tasks:
    - name: install dependencies
      become_user: root
      register: mysqlapt
      apt:
        pkg: '{{ packages }}'
        state: present
        update_cache: yes
      vars:
        packages:
          - python3-mysqldb # required for mysql_user module to work
          - mysql-server
    - name: listen to mysql on all interfaces
      become_user: root
      register: mysqlcnf
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address            = 0.0.0.0'
    - name: restart the mysql service
      become_user: root
      service: name=mysql state=restarted enabled=yes
      when: mysqlapt.changed or mysqlcnf.changed
    - name: create mysql user
      become_user: root
      mysql_user:
        name: dzl
        host: '{{ item }}'
        password: 'lighthouse'
        check_implicit_admin: yes
        priv: '*.*:ALL,GRANT'
      with_items:
        - '{{ ansible_default_ipv4.address }}' # allow over internal IP address
        - 127.0.0.1
        - ::1
        - localhost
    - name: create mysql db
      mysql_db: name=dzl_lighthouse state=present login_user=dzl login_password=lighthouse
    - name: setup cron job for agent-run-official
      cron: name='dzl official' user=dzl job='/usr/bin/flock -n /dzl/log/.lockfile-official /dzl/scripts/agent-run-official.sh >> /dzl/log/official.log 2>&1'
- hosts: workers
  become: yes
  become_user: dzl
  tasks:
    - name: setup cron job for agent-run-branch
      cron: name='dzl branch' user=dzl job='/usr/bin/flock -n /dzl/log/.lockfile-branch /dzl/scripts/agent-run-branch.sh >> /dzl/log/branch.log 2>&1'
